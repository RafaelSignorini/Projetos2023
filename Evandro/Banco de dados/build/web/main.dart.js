// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const alignment = flutter_sdk.src__painting__alignment;
  const image = flutter_sdk.src__widgets__image;
  const text_style = flutter_sdk.src__painting__text_style;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const floating_action_button = flutter_sdk.src__material__floating_action_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const container = flutter_sdk.src__widgets__container;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const list_tile = flutter_sdk.src__material__list_tile;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $add = dartx.add;
  var $isNotEmpty = dartx.isNotEmpty;
  var $last = dartx.last;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $length = dartx.length;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToHistoricoPage: () => (T.BuildContextToHistoricoPage = dart.constFn(dart.fnType(main.HistoricoPage, [framework.BuildContext])))(),
    BuildContextToOutraTela: () => (T.BuildContextToOutraTela = dart.constFn(dart.fnType(main.OutraTela, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T.BuildContextToWidget())))(),
    JSArrayOfTemperatureData: () => (T.JSArrayOfTemperatureData = dart.constFn(_interceptors.JSArray$(main.TemperatureData)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextAndintToListTile: () => (T.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[3] || CT.C3,
        [TextStyle_fontSize]: 29,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[2] || CT.C2,
        [Text_textSpan]: null,
        [Text_data]: "Quanto em Fahrenheit, e Oque fazer?"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Calcular"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Bancos de Dados"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58132
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[8] || CT.C8
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Hist√≥rico de Temperaturas"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[3] || CT.C3,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Hist√≥rico de Temperaturas:"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "BANCOS DE DADOS!"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Principais bancos de Dados:"
      });
    },
    get C15() {
      return C[15] = dart.constList(["SQliteSimples e eficaz", "Compat√≠vel com macOS, Linux, Windows, Android e iOS", "Serve para aplicativos desktop e servidores de baixo tr√°fego", "Utiliz√°vel para prototipagens r√°pidas"], core.String);
    },
    get C16() {
      return C[16] = dart.constList(["POSTGRELida com cargas complexas que requerem alto desempenho", "Oferece um leque amplo de recursos, como as transi√ß√µes ACID, suporte a chaves estrangeiras e gatilhos, dentre outras fun√ß√µes", "Compat√≠vel com Python, Java e Ruby", "Tem funcionalidade robusta e personaliz√°vel"], core.String);
    },
    get C17() {
      return C[17] = dart.constList(["MySQLFoco em desempenho, projetado para ser r√°pido e eficiente", "Compat√≠vel com PHP, Python e Java", "Utiliza tecnologias de otimiza√ß√£o, √≠ndices, cache de consultas, particionamento de tabelas, etc"], core.String);
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    }
  }, false);
  var C = Array(19).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Flutter Demo", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: new main.MyHomePage.new({title: "Dia de praia"}), routes: new (T.IdentityMapOfString$BuildContextToWidget()).from(["/historico", dart.fn(context => new main.HistoricoPage.new(), T.BuildContextToHistoricoPage()), "/outraTela", dart.fn(context => new main.OutraTela.new(), T.BuildContextToOutraTela())])});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var celsiusTemperature$ = dart.privateName(main, "TemperatureData.celsiusTemperature");
  var fahrenheitTemperature$ = dart.privateName(main, "TemperatureData.fahrenheitTemperature");
  var dateTime$ = dart.privateName(main, "TemperatureData.dateTime");
  main.TemperatureData = class TemperatureData extends core.Object {
    get celsiusTemperature() {
      return this[celsiusTemperature$];
    }
    set celsiusTemperature(value) {
      super.celsiusTemperature = value;
    }
    get fahrenheitTemperature() {
      return this[fahrenheitTemperature$];
    }
    set fahrenheitTemperature(value) {
      super.fahrenheitTemperature = value;
    }
    get dateTime() {
      return this[dateTime$];
    }
    set dateTime(value) {
      super.dateTime = value;
    }
    static ['_#new#tearOff'](opts) {
      let celsiusTemperature = opts && 'celsiusTemperature' in opts ? opts.celsiusTemperature : null;
      let fahrenheitTemperature = opts && 'fahrenheitTemperature' in opts ? opts.fahrenheitTemperature : null;
      let dateTime = opts && 'dateTime' in opts ? opts.dateTime : null;
      return new main.TemperatureData.new({celsiusTemperature: celsiusTemperature, fahrenheitTemperature: fahrenheitTemperature, dateTime: dateTime});
    }
  };
  (main.TemperatureData.new = function(opts) {
    let celsiusTemperature = opts && 'celsiusTemperature' in opts ? opts.celsiusTemperature : null;
    let fahrenheitTemperature = opts && 'fahrenheitTemperature' in opts ? opts.fahrenheitTemperature : null;
    let dateTime = opts && 'dateTime' in opts ? opts.dateTime : null;
    this[celsiusTemperature$] = celsiusTemperature;
    this[fahrenheitTemperature$] = fahrenheitTemperature;
    this[dateTime$] = dateTime;
    ;
  }).prototype = main.TemperatureData.prototype;
  dart.addTypeTests(main.TemperatureData);
  dart.addTypeCaches(main.TemperatureData);
  dart.setLibraryUri(main.TemperatureData, I[0]);
  dart.setFieldSignature(main.TemperatureData, () => ({
    __proto__: dart.getFields(main.TemperatureData.__proto__),
    celsiusTemperature: dart.finalFieldType(core.double),
    fahrenheitTemperature: dart.finalFieldType(core.double),
    dateTime: dart.finalFieldType(core.DateTime)
  }));
  main.TemperatureDataList = class TemperatureDataList extends core.Object {
    static ['_#new#tearOff']() {
      return new main.TemperatureDataList.new();
    }
  };
  (main.TemperatureDataList.new = function() {
    ;
  }).prototype = main.TemperatureDataList.prototype;
  dart.addTypeTests(main.TemperatureDataList);
  dart.addTypeCaches(main.TemperatureDataList);
  dart.setLibraryUri(main.TemperatureDataList, I[0]);
  dart.setStaticFieldSignature(main.TemperatureDataList, () => ['list']);
  dart.defineLazy(main.TemperatureDataList, {
    /*main.TemperatureDataList.list*/get list() {
      return T.JSArrayOfTemperatureData().of([]);
    }
  }, false);
  var title$ = dart.privateName(main, "MyHomePage.title");
  main.MyHomePage = class MyHomePage extends framework.StatefulWidget {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      return new main.MyHomePage.new({key: key, title: title});
    }
    createState() {
      return new main._MyHomePageState.new();
    }
  };
  (main.MyHomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    this[title$] = title;
    main.MyHomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyHomePage.prototype;
  dart.addTypeTests(main.MyHomePage);
  dart.addTypeCaches(main.MyHomePage);
  dart.setMethodSignature(main.MyHomePage, () => ({
    __proto__: dart.getMethods(main.MyHomePage.__proto__),
    createState: dart.fnType(framework.State$(main.MyHomePage), [])
  }));
  dart.setLibraryUri(main.MyHomePage, I[0]);
  dart.setFieldSignature(main.MyHomePage, () => ({
    __proto__: dart.getFields(main.MyHomePage.__proto__),
    title: dart.finalFieldType(core.String)
  }));
  var _temperatureController = dart.privateName(main, "_temperatureController");
  var _texto = dart.privateName(main, "_texto");
  var _calcular = dart.privateName(main, "_calcular");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  main._MyHomePageState = class _MyHomePageState extends framework.State$(main.MyHomePage) {
    [_calcular]() {
      let celsiusTemperature = core.double.tryParse(this[_temperatureController].text);
      if (celsiusTemperature != null) {
        let fahrenheitTemperature = dart.notNull(celsiusTemperature) * 9 / 5 + 32;
        let now = new core.DateTime.now();
        let temperatureData = new main.TemperatureData.new({celsiusTemperature: celsiusTemperature, fahrenheitTemperature: fahrenheitTemperature, dateTime: now});
        main.TemperatureDataList.list[$add](temperatureData);
        this.setState(dart.fn(() => {
          if (main.TemperatureDataList.list[$isNotEmpty]) {
            let lastData = main.TemperatureDataList.list[$last];
            if (lastData.celsiusTemperature > 25) {
              this[_texto] = "√â dia de praia!";
            } else {
              this[_texto] = "Assistir filme tamb√©m √© bom!";
            }
            core.print("Temperatura em Celsius: " + dart.str(lastData.celsiusTemperature));
            core.print("Temperatura em Fahrenheit: " + dart.str(lastData.fahrenheitTemperature));
            core.print("Data: " + dart.str(lastData.dateTime));
          }
        }, T.VoidTovoid()));
      }
    }
    alterarImagem() {
      this.setState(dart.fn(() => {
        if (main.TemperatureDataList.list[$isNotEmpty]) {
          let lastData = main.TemperatureDataList.list[$last];
          if (lastData.celsiusTemperature > 25) {
            this.img = "assets/images/sun.png";
          } else {
            this.img = "assets/images/sleeping.png";
          }
        }
      }, T.VoidTovoid()));
    }
    dispose() {
      this[_temperatureController].dispose();
      super.dispose();
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new(this.widget.title)}), body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: (() => {
              let t0 = T.JSArrayOfWidget().of([new basic.Align.new({alignment: alignment.Alignment.topCenter, child: new basic.Transform.scale({scale: 0.5, child: new image.Image.asset(this.img)})}), C[1] || CT.C1, C[4] || CT.C4, new text_field.TextField.new({controller: this[_temperatureController], decoration: new input_decorator.InputDecoration.new({labelText: "Digite a temperatura em Celsius"})}), C[4] || CT.C4, new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _calcular), child: C[5] || CT.C5}), new text.Text.new(this[_texto]), C[4] || CT.C4]);
              if (main.TemperatureDataList.list[$isNotEmpty]) t0.push(new basic.Column.new({children: T.JSArrayOfWidget().of([new text.Text.new("√öltima Temperatura:", {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold})}), new text.Text.new("Celsius: " + main.TemperatureDataList.list[$last].celsiusTemperature[$toStringAsFixed](2)), new text.Text.new("Fahrenheit: " + main.TemperatureDataList.list[$last].fahrenheitTemperature[$toStringAsFixed](2)), new text.Text.new("Data: " + main.TemperatureDataList.list[$last].dateTime.toString())])}));
              t0.push(new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  navigator.Navigator.pushNamed(T.ObjectN(), context, "/outraTela");
                }, T.VoidTovoid()), child: C[6] || CT.C6}));
              return t0;
            })()})}), floatingActionButton: new floating_action_button.FloatingActionButton.new({onPressed: dart.fn(() => {
            navigator.Navigator.pushNamed(T.ObjectN(), context, "/historico");
          }, T.VoidTovoid()), child: C[7] || CT.C7})});
    }
    static ['_#new#tearOff']() {
      return new main._MyHomePageState.new();
    }
  };
  (main._MyHomePageState.new = function() {
    this[_temperatureController] = new editable_text.TextEditingController.new();
    this[_texto] = "";
    this.img = "assets/images/umbrella.png";
    main._MyHomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._MyHomePageState.prototype;
  dart.addTypeTests(main._MyHomePageState);
  dart.addTypeCaches(main._MyHomePageState);
  dart.setMethodSignature(main._MyHomePageState, () => ({
    __proto__: dart.getMethods(main._MyHomePageState.__proto__),
    [_calcular]: dart.fnType(dart.void, []),
    alterarImagem: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._MyHomePageState, I[0]);
  dart.setFieldSignature(main._MyHomePageState, () => ({
    __proto__: dart.getFields(main._MyHomePageState.__proto__),
    [_temperatureController]: dart.finalFieldType(editable_text.TextEditingController),
    [_texto]: dart.fieldType(core.String),
    img: dart.fieldType(core.String)
  }));
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main.HistoricoPage = class HistoricoPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HistoricoPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[9] || CT.C9}), body: new container.Container.new({padding: C[10] || CT.C10, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[11] || CT.C11, C[4] || CT.C4, new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: main.TemperatureDataList.list[$length], itemBuilder: dart.fn((context, index) => {
                    let temperatureData = main.TemperatureDataList.list[$_get](index);
                    return new list_tile.ListTile.new({title: new text.Text.new("Celsius: " + temperatureData.celsiusTemperature[$toStringAsFixed](2)), subtitle: new text.Text.new("Fahrenheit: " + temperatureData.fahrenheitTemperature[$toStringAsFixed](2) + " | " + "Data: " + temperatureData.dateTime.toString())});
                  }, T.BuildContextAndintToListTile())})})])})})});
    }
  };
  (main.HistoricoPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HistoricoPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HistoricoPage.prototype;
  dart.addTypeTests(main.HistoricoPage);
  dart.addTypeCaches(main.HistoricoPage);
  dart.setMethodSignature(main.HistoricoPage, () => ({
    __proto__: dart.getMethods(main.HistoricoPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.HistoricoPage, I[0]);
  main.OutraTela = class OutraTela extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.OutraTela.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[13] || CT.C13}), body: new basic.Padding.new({padding: C[10] || CT.C10, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[14] || CT.C14, C[4] || CT.C4, new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                  let t1 = T.JSArrayOfWidget().of([]);
                  for (let topico of main.OutraTela.texto1)
                    t1.push(new text.Text.new("‚Ä¢ " + topico));
                  return t1;
                })()}), C[4] || CT.C4, new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                  let t2 = T.JSArrayOfWidget().of([]);
                  for (let topico of main.OutraTela.texto2)
                    t2.push(new text.Text.new("‚Ä¢ " + topico));
                  return t2;
                })()}), C[4] || CT.C4, new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                  let t3 = T.JSArrayOfWidget().of([]);
                  for (let topico of main.OutraTela.texto3)
                    t3.push(new text.Text.new("‚Ä¢ " + topico));
                  return t3;
                })()})])})})});
    }
  };
  (main.OutraTela.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.OutraTela.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.OutraTela.prototype;
  dart.addTypeTests(main.OutraTela);
  dart.addTypeCaches(main.OutraTela);
  dart.setMethodSignature(main.OutraTela, () => ({
    __proto__: dart.getMethods(main.OutraTela.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.OutraTela, I[0]);
  dart.setStaticFieldSignature(main.OutraTela, () => ['texto1', 'texto2', 'texto3']);
  dart.defineLazy(main.OutraTela, {
    /*main.OutraTela.texto1*/get texto1() {
      return C[15] || CT.C15;
    },
    /*main.OutraTela.texto2*/get texto2() {
      return C[16] || CT.C16;
    },
    /*main.OutraTela.texto3*/get texto3() {
      return C[17] || CT.C17;
    }
  }, false);
  main.main = function main$0() {
    binding.runApp(C[18] || CT.C18);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
